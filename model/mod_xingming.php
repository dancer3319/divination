<?php

/*
 获取所有文章栏目的对象
 */

if (!defined('CORE'))
    exit('Request Error!');

class mod_xingming
{
	
	
	//得到一个汉字的简体笔画数---getnum()函数
	function getnum($txt)
	{
		$query="select * from `sm_bihuaj` where hanzij like '%$txt%'";
		$row=db::queryone($query);	
		$num=$row['numj'];
		return $num;
	}
	//得到繁体笔画
	 function getnumft($txt){
		$query="select * from `sm_bihua` where hanzi like '%$txt%'";
		$row=db::queryone($query);	
		$num=$row['num'];
		return $num;
	 }
	
	//得到一个汉字字意五行;
	function getzywh($txt){
		$query="select * from `sm_hzwh` where hz like '%$txt%'";
		$row=db::queryone($query);	
		$num=$row['wh'];
		return $num;
	}
	
	function tgdzwh($tgdz)
	{
	switch($tgdz)
	{
	  case "子":$wh="水";break;
	  case "亥":$wh="水";break;
	  case "寅":$wh="木";break;
	  case "卯":$wh="木";break;
	  case "巳":$wh="火";break;
	  case "午":$wh="火";break;
	  case "申":$wh="金";break;
	  case "酉":$wh="金";break;
	  case "辰":$wh="土";break;
	  case "戌":$wh="土";break;
	  case "丑":$wh="土";break;
	  case "未":$wh="土";break;
	  case "甲":$wh="木";break;
	  case "乙":$wh="木";break;
	  case "丙":$wh="火";break;
	  case "丁":$wh="火";break;
	  case "戊":$wh="土";break;
	  case "己":$wh="土";break;
	  case "庚":$wh="金";break;
	  case "辛":$wh="金";break;
	  case "壬":$wh="水";break;
	  case "癸":$wh="水";break;
	}
	return $wh;
	}
	
	   
	   function getsancai_133($genum)
	{
	$scnum=$genum % 10;
	switch($scnum)
	{
	  case 1:$tiantxt="木";break;
	  case 2:$tiantxt="木";break;
	  case 3:$tiantxt="火";break;
	  case 4:$tiantxt="火";break;
	  case 5:$tiantxt="土";break;
	  case 6:$tiantxt="土";break;
	  case 7:$tiantxt="金";break;
	  case 8:$tiantxt="金";break;
	  case 9:$tiantxt="水";break;
	  case 10:$tiantxt="水";break;
	  case 0:$tiantxt="水";break;
	}
	return $tiantxt;
	}
	
	
	function getpf_133($sc)
	{
	switch($sc)
	{
	  case "大吉":$szpf=12;break;
	  case "吉":$szpf=8;break;
	  case "半吉":$szpf=5;break;
	  case "大凶":$szpf=0;break;
	  case "凶":$szpf=1;break;
	  case "半凶":$szpf=2;break;
	  case "平":$szpf=4;break;
	}
	return $szpf;
	}
	/***
	 *获取笔画
	 */
	function get_bihua($str){
		$sql='select num from `sm_bihua` where hanzi like "%'.$str.'%"';
		$bihua1 = db::queryone($sql);
		if($bihua1['num']!=''){
				$bihua1=$bihua1['num'];
			}else{
				$bihuatext = new cls_bihua();
				$bihua1=$bihuatext->find($xing1);
		}	
		
		$sql='select `wh` from `sm_hzwh` where hz like "%'.$str.'%"';
		$hzwh1=db::queryone($sql);	
		if($hzwh1['wh']!=''){
			$hzwh1=$hzwh1['wh'];
		}else{
			$hzwh1='金';
		}
		$arr['bihua'] = $bihua1;
		$arr['hzwh'] = $hzwh1;
		return $arr;
		
	}
	
	
	function getsancai($tiange){

		$tian=$tiange%10;	
	
		switch ($tian) {
	
		case 1 :
	
		$tiantxt = "木";
	
		break;
	
		case 2 :
	
		$tiantxt = "木";
	
		break;
	
		case 3 :
	
		$tiantxt = "火";
	
		break;
	
		case 4 :
	
		$tiantxt = "火";
	
		break;
	
		case 5 :
	
		$tiantxt = "土";
	
		break;
	
		case 6 :
	
		$tiantxt = "土";
	
		break;
	
		case 7 :
	
		$tiantxt = "金";
	
		break;
	
		case 8 :
	
		$tiantxt = "金";
	
		break;
	
		case 9 :
	
		$tiantxt = "水";
	
		break;
	
		case 0 :
	
		$tiantxt = "水";
	
		break;
	
		}
	
		return $tiantxt;

	}
	
	
	function getpf($sc){

		$szpf=0;
	
		if($sc=="大吉"){
	
			$szpf = 12;
	
			}elseif($sc=="吉"){
	
				$szpf = 8;
	
			}elseif($sc=="半吉"){
	
				$szpf = 5;
	
			}elseif($sc=="大凶"){
	
				$szpf = 0;
	
			}elseif($sc=="凶"){
	
				$szpf = 1;
	
			}elseif($sc=="半凶"){
	
				$szpf = 2;
	
			}elseif($sc=="平"){
	
				$szpf = 4;
	
			}
	
		return $szpf;  

	}	
	
	function gb_big5($string){ 
	
	$s="皑,蔼,碍,爱,翱,袄,奥,坝,罢,摆,败,颁,办,绊,帮,绑,镑,谤,剥,饱,宝,报,鲍,辈,贝,钡,狈,备,惫,绷,笔,毕,毙,闭,边,编,贬,变,辩,辫,鳖,瘪,濒,滨,宾,摈,饼,拨,钵,铂,驳,卜,补,参,蚕,残,惭,惨,灿,苍,舱,仓,沧,厕,侧,册,测,层,诧,搀,掺,蝉,馋,谗,缠,铲,产,阐,颤,场,尝,长,偿,肠,厂,畅,钞,车,彻,尘,陈,衬,撑,称,惩,诚,骋,痴,迟,驰,耻,齿,炽,冲,虫,宠,畴,踌,筹,绸,丑,橱,厨,锄,雏,础,储,触,处,传,疮,闯,创,锤,纯,绰,辞,词,赐,聪,葱,囱,从,丛,凑,窜,错,达,带,贷,担,单,郸,掸,胆,惮,诞,弹,当,挡,党,荡,档,捣,岛,祷,导,盗,灯,邓,敌,涤,递,缔,点,垫,电,淀,钓,调,迭,谍,叠,钉,顶,锭,订,东,动,栋,冻,斗,犊,独,读,赌,镀,锻,断,缎,兑,队,对,吨,顿,钝,夺,鹅,额,讹,恶,饿,儿,尔,饵,贰,发,罚,阀,珐,矾,钒,烦,范,贩,饭,访,纺,飞,废,费,纷,坟,奋,愤,粪,丰,枫,锋,风,疯,冯,缝,讽,凤,肤,辐,抚,辅,赋,复,负,讣,妇,缚,该,钙,盖,干,赶,秆,赣,冈,刚,钢,纲,岗,皋,镐,搁,鸽,阁,铬,个,给,龚,宫,巩,贡,钩,沟,构,购,够,蛊,顾,剐,关,观,馆,惯,贯,广,规,硅,归,龟,闺,轨,诡,柜,贵,刽,辊,滚,锅,国,过,骇,韩,汉,阂,鹤,贺,横,轰,鸿,红,后,壶,护,沪,户,哗,华,画,划,话,怀,坏,欢,环,还,缓,换,唤,痪,焕,涣,黄,谎,挥,辉,毁,贿,秽,会,烩,汇,讳,诲,绘,荤,浑,伙,获,货,祸,击,机,积,饥,讥,鸡,绩,缉,极,辑,级,挤,几,蓟,剂,济,计,记,际,继,纪,夹,荚,颊,贾,钾,价,驾,歼,监,坚,笺,间,艰,缄,茧,检,碱,硷,拣,捡,简,俭,减,荐,槛,鉴,践,贱,见,键,舰,剑,饯,渐,溅,涧,浆,蒋,桨,奖,讲,酱,胶,浇,骄,娇,搅,铰,矫,侥,脚,饺,缴,绞,轿,较,秸,阶,节,茎,惊,经,颈,静,镜,径,痉,竞,净,纠,厩,旧,驹,举,据,锯,惧,剧,鹃,绢,杰,洁,结,诫,届,紧,锦,仅,谨,进,晋,烬,尽,劲,荆,觉,决,诀,绝,钧,军,骏,开,凯,颗,壳,课,垦,恳,抠,库,裤,夸,块,侩,宽,矿,旷,况,亏,岿,窥,馈,溃,扩,阔,蜡,腊,莱,来,赖,蓝,栏,拦,篮,阑,兰,澜,谰,揽,览,懒,缆,烂,滥,捞,劳,涝,乐,镭,垒,类,泪,篱,离,里,鲤,礼,丽,厉,励,砾,历,沥,隶,俩,联,莲,连,镰,怜,涟,帘,敛,脸,链,恋,炼,练,粮,凉,两,辆,谅,疗,辽,镣,猎,临,邻,鳞,凛,赁,龄,铃,凌,灵,岭,领,馏,刘,龙,聋,咙,笼,垄,拢,陇,楼,娄,搂,篓,芦,卢,颅,庐,炉,掳,卤,虏,鲁,赂,禄,录,陆,驴,吕,铝,侣,屡,缕,虑,滤,绿,峦,挛,孪,滦,乱,抡,轮,伦,仑,沦,纶,论,萝,罗,逻,锣,箩,骡,骆,络,妈,玛,码,蚂,马,骂,吗,买,麦,卖,迈,脉,瞒,馒,蛮,满,谩,猫,锚,铆,贸,么,霉,没,镁,门,闷,们,锰,梦,谜,弥,觅,绵,缅,庙,灭,悯,闽,鸣,铭,谬,谋,亩,钠,纳,难,挠,脑,恼,闹,馁,腻,撵,捻,酿,鸟,聂,啮,镊,镍,柠,狞,宁,拧,泞,钮,纽,脓,浓,农,疟,诺,欧,鸥,殴,呕,沤,盘,庞,国,爱,赔,喷,鹏,骗,飘,频,贫,苹,凭,评,泼,颇,扑,铺,朴,谱,脐,齐,骑,岂,启,气,弃,讫,牵,扦,钎,铅,迁,签,谦,钱,钳,潜,浅,谴,堑,枪,呛,墙,蔷,强,抢,锹,桥,乔,侨,翘,窍,窃,钦,亲,轻,氢,倾,顷,请,庆,琼,穷,趋,区,躯,驱,龋,颧,权,劝,却,鹊,让,饶,扰,绕,热,韧,认,纫,荣,绒,软,锐,闰,润,洒,萨,鳃,赛,伞,丧,骚,扫,涩,杀,纱,筛,晒,闪,陕,赡,缮,伤,赏,烧,绍,赊,摄,慑,设,绅,审,婶,肾,渗,声,绳,胜,圣,师,狮,湿,诗,尸,时,蚀,实,识,驶,势,释,饰,视,试,寿,兽,枢,输,书,赎,属,术,树,竖,数,帅,双,谁,税,顺,说,硕,烁,丝,饲,耸,怂,颂,讼,诵,擞,苏,诉,肃,虽,绥,岁,孙,损,笋,缩,琐,锁,獭,挞,抬,摊,贪,瘫,滩,坛,谭,谈,叹,汤,烫,涛,绦,腾,誊,锑,题,体,屉,条,贴,铁,厅,听,烃,铜,统,头,图,涂,团,颓,蜕,脱,鸵,驮,驼,椭,洼,袜,弯,湾,顽,万,网,韦,违,围,为,潍,维,苇,伟,伪,纬,谓,卫,温,闻,纹,稳,问,瓮,挝,蜗,涡,窝,呜,钨,乌,诬,无,芜,吴,坞,雾,务,误,锡,牺,袭,习,铣,戏,细,虾,辖,峡,侠,狭,厦,锨,鲜,纤,咸,贤,衔,闲,显,险,现,献,县,馅,羡,宪,线,厢,镶,乡,详,响,项,萧,销,晓,啸,蝎,协,挟,携,胁,谐,写,泻,谢,锌,衅,兴,汹,锈,绣,虚,嘘,须,许,绪,续,轩,悬,选,癣,绚,学,勋,询,寻,驯,训,讯,逊,压,鸦,鸭,哑,亚,讶,阉,烟,盐,严,颜,阎,艳,厌,砚,彦,谚,验,鸯,杨,扬,疡,阳,痒,养,样,瑶,摇,尧,遥,窑,谣,药,爷,页,业,叶,医,铱,颐,遗,仪,彝,蚁,艺,亿,忆,义,诣,议,谊,译,异,绎,荫,阴,银,饮,樱,婴,鹰,应,缨,莹,萤,营,荧,蝇,颖,哟,拥,佣,痈,踊,咏,涌,优,忧,邮,铀,犹,游,诱,舆,鱼,渔,娱,与,屿,语,吁,御,狱,誉,预,驭,鸳,渊,辕,园,员,圆,缘,远,愿,约,跃,钥,岳,粤,悦,阅,云,郧,匀,陨,运,蕴,酝,晕,韵,杂,灾,载,攒,暂,赞,赃,脏,凿,枣,灶,责,择,则,泽,贼,赠,扎,札,轧,铡,闸,诈,斋,债,毡,盏,斩,辗,崭,栈,战,绽,张,涨,帐,账,胀,赵,蛰,辙,锗,这,贞,针,侦,诊,镇,阵,挣,睁,狰,帧,郑,证,织,职,执,纸,挚,掷,帜,质,钟,终,种,肿,众,诌,轴,皱,昼,骤,猪,诸,诛,烛,瞩,嘱,贮,铸,筑,驻,专,砖,转,赚,桩,庄,装,妆,壮,状,锥,赘,坠,缀,谆,浊,兹,资,渍,踪,综,总,纵,邹,诅,组,钻,致,钟,么,为,只,凶,准,启,板,里,雳,余,链,泄";
$t="皚,藹,礙,愛,翺,襖,奧,壩,罷,擺,敗,頒,辦,絆,幫,綁,鎊,謗,剝,飽,寶,報,鮑,輩,貝,鋇,狽,備,憊,繃,筆,畢,斃,閉,邊,編,貶,變,辯,辮,鼈,癟,瀕,濱,賓,擯,餅,撥,缽,鉑,駁,蔔,補,參,蠶,殘,慚,慘,燦,蒼,艙,倉,滄,廁,側,冊,測,層,詫,攙,摻,蟬,饞,讒,纏,鏟,産,闡,顫,場,嘗,長,償,腸,廠,暢,鈔,車,徹,塵,陳,襯,撐,稱,懲,誠,騁,癡,遲,馳,恥,齒,熾,沖,蟲,寵,疇,躊,籌,綢,醜,櫥,廚,鋤,雛,礎,儲,觸,處,傳,瘡,闖,創,錘,純,綽,辭,詞,賜,聰,蔥,囪,從,叢,湊,竄,錯,達,帶,貸,擔,單,鄲,撣,膽,憚,誕,彈,當,擋,黨,蕩,檔,搗,島,禱,導,盜,燈,鄧,敵,滌,遞,締,點,墊,電,澱,釣,調,叠,諜,疊,釘,頂,錠,訂,東,動,棟,凍,鬥,犢,獨,讀,賭,鍍,鍛,斷,緞,兌,隊,對,噸,頓,鈍,奪,鵝,額,訛,惡,餓,兒,爾,餌,貳,發,罰,閥,琺,礬,釩,煩,範,販,飯,訪,紡,飛,廢,費,紛,墳,奮,憤,糞,豐,楓,鋒,風,瘋,馮,縫,諷,鳳,膚,輻,撫,輔,賦,複,負,訃,婦,縛,該,鈣,蓋,幹,趕,稈,贛,岡,剛,鋼,綱,崗,臯,鎬,擱,鴿,閣,鉻,個,給,龔,宮,鞏,貢,鈎,溝,構,購,夠,蠱,顧,剮,關,觀,館,慣,貫,廣,規,矽,歸,龜,閨,軌,詭,櫃,貴,劊,輥,滾,鍋,國,過,駭,韓,漢,閡,鶴,賀,橫,轟,鴻,紅,後,壺,護,滬,戶,嘩,華,畫,劃,話,懷,壞,歡,環,還,緩,換,喚,瘓,煥,渙,黃,謊,揮,輝,毀,賄,穢,會,燴,彙,諱,誨,繪,葷,渾,夥,獲,貨,禍,擊,機,積,饑,譏,雞,績,緝,極,輯,級,擠,幾,薊,劑,濟,計,記,際,繼,紀,夾,莢,頰,賈,鉀,價,駕,殲,監,堅,箋,間,艱,緘,繭,檢,堿,鹼,揀,撿,簡,儉,減,薦,檻,鑒,踐,賤,見,鍵,艦,劍,餞,漸,濺,澗,漿,蔣,槳,獎,講,醬,膠,澆,驕,嬌,攪,鉸,矯,僥,腳,餃,繳,絞,轎,較,稭,階,節,莖,驚,經,頸,靜,鏡,徑,痙,競,淨,糾,廄,舊,駒,舉,據,鋸,懼,劇,鵑,絹,傑,潔,結,誡,屆,緊,錦,僅,謹,進,晉,燼,盡,勁,荊,覺,決,訣,絕,鈞,軍,駿,開,凱,顆,殼,課,墾,懇,摳,庫,褲,誇,塊,儈,寬,礦,曠,況,虧,巋,窺,饋,潰,擴,闊,蠟,臘,萊,來,賴,藍,欄,攔,籃,闌,蘭,瀾,讕,攬,覽,懶,纜,爛,濫,撈,勞,澇,樂,鐳,壘,類,淚,籬,離,裏,鯉,禮,麗,厲,勵,礫,曆,瀝,隸,倆,聯,蓮,連,鐮,憐,漣,簾,斂,臉,鏈,戀,煉,練,糧,涼,兩,輛,諒,療,遼,鐐,獵,臨,鄰,鱗,凜,賃,齡,鈴,淩,靈,嶺,領,餾,劉,龍,聾,嚨,籠,壟,攏,隴,樓,婁,摟,簍,蘆,盧,顱,廬,爐,擄,鹵,虜,魯,賂,祿,錄,陸,驢,呂,鋁,侶,屢,縷,慮,濾,綠,巒,攣,孿,灤,亂,掄,輪,倫,侖,淪,綸,論,蘿,羅,邏,鑼,籮,騾,駱,絡,媽,瑪,碼,螞,馬,罵,嗎,買,麥,賣,邁,脈,瞞,饅,蠻,滿,謾,貓,錨,鉚,貿,麽,黴,沒,鎂,門,悶,們,錳,夢,謎,彌,覓,綿,緬,廟,滅,憫,閩,鳴,銘,謬,謀,畝,鈉,納,難,撓,腦,惱,鬧,餒,膩,攆,撚,釀,鳥,聶,齧,鑷,鎳,檸,獰,甯,擰,濘,鈕,紐,膿,濃,農,瘧,諾,歐,鷗,毆,嘔,漚,盤,龐,國,愛,賠,噴,鵬,騙,飄,頻,貧,蘋,憑,評,潑,頗,撲,鋪,樸,譜,臍,齊,騎,豈,啓,氣,棄,訖,牽,扡,釺,鉛,遷,簽,謙,錢,鉗,潛,淺,譴,塹,槍,嗆,牆,薔,強,搶,鍬,橋,喬,僑,翹,竅,竊,欽,親,輕,氫,傾,頃,請,慶,瓊,窮,趨,區,軀,驅,齲,顴,權,勸,卻,鵲,讓,饒,擾,繞,熱,韌,認,紉,榮,絨,軟,銳,閏,潤,灑,薩,鰓,賽,傘,喪,騷,掃,澀,殺,紗,篩,曬,閃,陝,贍,繕,傷,賞,燒,紹,賒,攝,懾,設,紳,審,嬸,腎,滲,聲,繩,勝,聖,師,獅,濕,詩,屍,時,蝕,實,識,駛,勢,釋,飾,視,試,壽,獸,樞,輸,書,贖,屬,術,樹,豎,數,帥,雙,誰,稅,順,說,碩,爍,絲,飼,聳,慫,頌,訟,誦,擻,蘇,訴,肅,雖,綏,歲,孫,損,筍,縮,瑣,鎖,獺,撻,擡,攤,貪,癱,灘,壇,譚,談,歎,湯,燙,濤,縧,騰,謄,銻,題,體,屜,條,貼,鐵,廳,聽,烴,銅,統,頭,圖,塗,團,頹,蛻,脫,鴕,馱,駝,橢,窪,襪,彎,灣,頑,萬,網,韋,違,圍,爲,濰,維,葦,偉,僞,緯,謂,衛,溫,聞,紋,穩,問,甕,撾,蝸,渦,窩,嗚,鎢,烏,誣,無,蕪,吳,塢,霧,務,誤,錫,犧,襲,習,銑,戲,細,蝦,轄,峽,俠,狹,廈,鍁,鮮,纖,鹹,賢,銜,閑,顯,險,現,獻,縣,餡,羨,憲,線,廂,鑲,鄉,詳,響,項,蕭,銷,曉,嘯,蠍,協,挾,攜,脅,諧,寫,瀉,謝,鋅,釁,興,洶,鏽,繡,虛,噓,須,許,緒,續,軒,懸,選,癬,絢,學,勳,詢,尋,馴,訓,訊,遜,壓,鴉,鴨,啞,亞,訝,閹,煙,鹽,嚴,顔,閻,豔,厭,硯,彥,諺,驗,鴦,楊,揚,瘍,陽,癢,養,樣,瑤,搖,堯,遙,窯,謠,藥,爺,頁,業,葉,醫,銥,頤,遺,儀,彜,蟻,藝,億,憶,義,詣,議,誼,譯,異,繹,蔭,陰,銀,飲,櫻,嬰,鷹,應,纓,瑩,螢,營,熒,蠅,穎,喲,擁,傭,癰,踴,詠,湧,優,憂,郵,鈾,猶,遊,誘,輿,魚,漁,娛,與,嶼,語,籲,禦,獄,譽,預,馭,鴛,淵,轅,園,員,圓,緣,遠,願,約,躍,鑰,嶽,粵,悅,閱,雲,鄖,勻,隕,運,蘊,醞,暈,韻,雜,災,載,攢,暫,贊,贓,髒,鑿,棗,竈,責,擇,則,澤,賊,贈,紮,劄,軋,鍘,閘,詐,齋,債,氈,盞,斬,輾,嶄,棧,戰,綻,張,漲,帳,賬,脹,趙,蟄,轍,鍺,這,貞,針,偵,診,鎮,陣,掙,睜,猙,幀,鄭,證,織,職,執,紙,摯,擲,幟,質,鍾,終,種,腫,衆,謅,軸,皺,晝,驟,豬,諸,誅,燭,矚,囑,貯,鑄,築,駐,專,磚,轉,賺,樁,莊,裝,妝,壯,狀,錐,贅,墜,綴,諄,濁,茲,資,漬,蹤,綜,總,縱,鄒,詛,組,鑽,緻,鐘,麼,為,隻,兇,準,啟,闆,裡,靂,餘,鍊,洩";
	$sarr=explode(',',$s);
	$tarr=explode(',',$t);

	for($i=0;$i<1274;$i++){
		$string=str_replace($sarr[$i],$tarr[$i],$string);	
	}
	return $string;

	}
	
	
	function Pinyin_sm($_String, $_Code='gb2312')

{

$_DataKey = "a|ai|an|ang|ao|ba|bai|ban|bang|bao|bei|ben|beng|bi|bian|biao|bie|bin|bing|bo|bu|ca|cai|can|cang|cao|ce|ceng|cha".

"|chai|chan|chang|chao|che|chen|cheng|chi|chong|chou|chu|chuai|chuan|chuang|chui|chun|chuo|ci|cong|cou|cu|".

"cuan|cui|cun|cuo|da|dai|dan|dang|dao|de|deng|di|dian|diao|die|ding|diu|dong|dou|du|duan|dui|dun|duo|e|en|er".

"|fa|fan|fang|fei|fen|feng|fo|fou|fu|ga|gai|gan|gang|gao|ge|gei|gen|geng|gong|gou|gu|gua|guai|guan|guang|gui".

"|gun|guo|ha|hai|han|hang|hao|he|hei|hen|heng|hong|hou|hu|hua|huai|huan|huang|hui|hun|huo|ji|jia|jian|jiang".

"|jiao|jie|jin|jing|jiong|jiu|ju|juan|jue|jun|ka|kai|kan|kang|kao|ke|ken|keng|kong|kou|ku|kua|kuai|kuan|kuang".

"|kui|kun|kuo|la|lai|lan|lang|lao|le|lei|leng|li|lia|lian|liang|liao|lie|lin|ling|liu|long|lou|lu|lv|luan|lue".

"|lun|luo|ma|mai|man|mang|mao|me|mei|men|meng|mi|mian|miao|mie|min|ming|miu|mo|mou|mu|na|nai|nan|nang|nao|ne".

"|nei|nen|neng|ni|nian|niang|niao|nie|nin|ning|niu|nong|nu|nv|nuan|nue|nuo|o|ou|pa|pai|pan|pang|pao|pei|pen".

"|peng|pi|pian|piao|pie|pin|ping|po|pu|qi|qia|qian|qiang|qiao|qie|qin|qing|qiong|qiu|qu|quan|que|qun|ran|rang".

"|rao|re|ren|reng|ri|rong|rou|ru|ruan|rui|run|ruo|sa|sai|san|sang|sao|se|sen|seng|sha|shai|shan|shang|shao|".

"she|shen|sheng|shi|shou|shu|shua|shuai|shuan|shuang|shui|shun|shuo|si|song|sou|su|suan|sui|sun|suo|ta|tai|".

"tan|tang|tao|te|teng|ti|tian|tiao|tie|ting|tong|tou|tu|tuan|tui|tun|tuo|wa|wai|wan|wang|wei|wen|weng|wo|wu".

"|xi|xia|xian|xiang|xiao|xie|xin|xing|xiong|xiu|xu|xuan|xue|xun|ya|yan|yang|yao|ye|yi|yin|ying|yo|yong|you".

"|yu|yuan|yue|yun|za|zai|zan|zang|zao|ze|zei|zen|zeng|zha|zhai|zhan|zhang|zhao|zhe|zhen|zheng|zhi|zhong|".

"zhou|zhu|zhua|zhuai|zhuan|zhuang|zhui|zhun|zhuo|zi|zong|zou|zu|zuan|zui|zun|zuo";

$_DataValue = "-20319|-20317|-20304|-20295|-20292|-20283|-20265|-20257|-20242|-20230|-20051|-20036|-20032|-20026|-20002|-19990".

"|-19986|-19982|-19976|-19805|-19784|-19775|-19774|-19763|-19756|-19751|-19746|-19741|-19739|-19728|-19725".

"|-19715|-19540|-19531|-19525|-19515|-19500|-19484|-19479|-19467|-19289|-19288|-19281|-19275|-19270|-19263".

"|-19261|-19249|-19243|-19242|-19238|-19235|-19227|-19224|-19218|-19212|-19038|-19023|-19018|-19006|-19003".

"|-18996|-18977|-18961|-18952|-18783|-18774|-18773|-18763|-18756|-18741|-18735|-18731|-18722|-18710|-18697".

"|-18696|-18526|-18518|-18501|-18490|-18478|-18463|-18448|-18447|-18446|-18239|-18237|-18231|-18220|-18211".

"|-18201|-18184|-18183|-18181|-18012|-17997|-17988|-17970|-17964|-17961|-17950|-17947|-17931|-17928|-17922".

"|-17759|-17752|-17733|-17730|-17721|-17703|-17701|-17697|-17692|-17683|-17676|-17496|-17487|-17482|-17468".

"|-17454|-17433|-17427|-17417|-17202|-17185|-16983|-16970|-16942|-16915|-16733|-16708|-16706|-16689|-16664".

"|-16657|-16647|-16474|-16470|-16465|-16459|-16452|-16448|-16433|-16429|-16427|-16423|-16419|-16412|-16407".

"|-16403|-16401|-16393|-16220|-16216|-16212|-16205|-16202|-16187|-16180|-16171|-16169|-16158|-16155|-15959".

"|-15958|-15944|-15933|-15920|-15915|-15903|-15889|-15878|-15707|-15701|-15681|-15667|-15661|-15659|-15652".

"|-15640|-15631|-15625|-15454|-15448|-15436|-15435|-15419|-15416|-15408|-15394|-15385|-15377|-15375|-15369".

"|-15363|-15362|-15183|-15180|-15165|-15158|-15153|-15150|-15149|-15144|-15143|-15141|-15140|-15139|-15128".

"|-15121|-15119|-15117|-15110|-15109|-14941|-14937|-14933|-14930|-14929|-14928|-14926|-14922|-14921|-14914".

"|-14908|-14902|-14894|-14889|-14882|-14873|-14871|-14857|-14678|-14674|-14670|-14668|-14663|-14654|-14645".

"|-14630|-14594|-14429|-14407|-14399|-14384|-14379|-14368|-14355|-14353|-14345|-14170|-14159|-14151|-14149".

"|-14145|-14140|-14137|-14135|-14125|-14123|-14122|-14112|-14109|-14099|-14097|-14094|-14092|-14090|-14087".

"|-14083|-13917|-13914|-13910|-13907|-13906|-13905|-13896|-13894|-13878|-13870|-13859|-13847|-13831|-13658".

"|-13611|-13601|-13406|-13404|-13400|-13398|-13395|-13391|-13387|-13383|-13367|-13359|-13356|-13343|-13340".

"|-13329|-13326|-13318|-13147|-13138|-13120|-13107|-13096|-13095|-13091|-13076|-13068|-13063|-13060|-12888".

"|-12875|-12871|-12860|-12858|-12852|-12849|-12838|-12831|-12829|-12812|-12802|-12607|-12597|-12594|-12585".

"|-12556|-12359|-12346|-12320|-12300|-12120|-12099|-12089|-12074|-12067|-12058|-12039|-11867|-11861|-11847".

"|-11831|-11798|-11781|-11604|-11589|-11536|-11358|-11340|-11339|-11324|-11303|-11097|-11077|-11067|-11055".

"|-11052|-11045|-11041|-11038|-11024|-11020|-11019|-11018|-11014|-10838|-10832|-10815|-10800|-10790|-10780".

"|-10764|-10587|-10544|-10533|-10519|-10331|-10329|-10328|-10322|-10315|-10309|-10307|-10296|-10281|-10274".

"|-10270|-10262|-10260|-10256|-10254";

$_TDataKey = explode('|', $_DataKey);

$_TDataValue = explode('|', $_DataValue);

$_Data = (PHP_VERSION>='5.0') ? array_combine($_TDataKey, $_TDataValue) : self::_Array_Combine($_TDataKey, $_TDataValue);

arsort($_Data);

reset($_Data);

if($_Code != 'gb2312') $_String = self::_U2_Utf8_Gb($_String);

$_Res = '';

for($i=0; $i<strlen($_String); $i++)

{

$_P = ord(substr($_String, $i, 1));

if($_P>160) { $_Q = ord(substr($_String, ++$i, 1)); $_P = $_P*256 + $_Q - 65536; }

$_Res .= self::_Pinyin($_P, $_Data);

}

return preg_replace("/[^a-z0-9]*/", '', $_Res);

}

function _Pinyin($_Num, $_Data)

{

if ($_Num>0 && $_Num<160 ) return chr($_Num);

elseif($_Num<-20319 || $_Num>-10247) return '';

else {

foreach($_Data as $k=>$v){ if($v<=$_Num) break; }

return $k;

}

}

function _U2_Utf8_Gb($_C)

{

$_String = '';

if($_C < 0x80) $_String .= $_C;

elseif($_C < 0x800)

{

$_String .= chr(0xC0 | $_C>>6);

$_String .= chr(0x80 | $_C & 0x3F);

}elseif($_C < 0x10000){

$_String .= chr(0xE0 | $_C>>12);

$_String .= chr(0x80 | $_C>>6 & 0x3F);

$_String .= chr(0x80 | $_C & 0x3F);

} elseif($_C < 0x200000) {

$_String .= chr(0xF0 | $_C>>18);

$_String .= chr(0x80 | $_C>>12 & 0x3F);

$_String .= chr(0x80 | $_C>>6 & 0x3F);

$_String .= chr(0x80 | $_C & 0x3F);

}

return iconv('UTF-8', 'GB2312', $_String);

}

function _Array_Combine($_Arr1, $_Arr2)

{

for($i=0; $i<count($_Arr1); $i++) $_Res[$_Arr1[$i]] = $_Arr2[$i];

return $_Res;

}
	
}


